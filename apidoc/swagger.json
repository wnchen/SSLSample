swagger: "2.0"
info:
  description: "This is Usher API document for authentication and
    account management.  More information is available at
    [http://www.usher.com](http://www.microstrategy.com)"
  version: "1.0"
  title: "Usher API"
  termsOfService: "http://www.microstrategy.com/terms/"
  contact:
    email: "usher@microstrategy.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.usher.com"
#host: "localhost:9000"
#basePath: "/v1"
tags:
  - name: "user"
    description: "Operations regarding user"
    externalDocs:
      description: "Details about user"
      url: "http://www.microstrategy.com"
  - name: "account"
    description: "Operations regarding account management"
  - name: "IoT"
    description: "Operations regarding IoT devices"
  - name: "system"
    description: "System policy and configurations"
  - name: "token"
    description: "Token related"
  - name: "otp"
    description: "One-time passcode related"
  - name: "cv"
    description: "Connected vehicle feature enabled"
    # - name: "message"
    #description: "Operations related to email, SMS and mobile push notification"
schemes:
  - "https"
  # This is for test only
  - "http"


paths:
  /appapi/v1/user:
    get:
      tags:
        - user
      summary: "Verify user's existence from a mobile app"
      description: "Verify user's existence from a mobile app.\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT, USER_NOT_FOUND)"
      operationId: "verifyUserExistenceFromApp"
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "User id"
          required: true
        - name: userIdType
          in: query
          type: array
          items:
            type: string
            enum:
              - email
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: "Successful transaction"
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                required:
                  - mobile
                properties:
                  mobile:
                    type: string
                    description: masked mobile number
                    example: 11******23
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'


    post:
      tags:
        - user
      summary: "User registration from a mobile app"
      description: "User registration from a mobile app.\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,ALREADY_EXIST)"
      operationId: "registration"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: "user reg info"
          schema:
            type: object
            required:
              - firstName
              - lastName
              - password
              - street1
              - city
              - state
              - country
              - zip
              - locale
              - appId
              - deviceId
              - email
              - mobile
            properties:
              #            userId:
              #              type: string
              #              example:
              #                test@example.com
              #            userIdType:
              #              type: string
              #              description: "User id type. If it is missing, the default is email"
              #              example:
              #                email
              #              enum:
              #                - email
              #                - mobile
              sid:
                type: string
                description: Session Id linked to a verified email or a verified mobile, this parameter is required when user need to verify email/mobile before signup.
                example:
                  5d13d4de-4f1d-4d38-a91f-8668639fabd7
              firstName:
                type: string
                example:
                  John
              lastName:
                type: string
                example:
                  Smith
              password:
                type: string
                example:
                  Test#12345
              street1:
                type: string
                example:
                  100 Main St,
              street2:
                type: string
                example:
                  Apt 101
              city:
                type: string
                example:
                  Spring Field
              state:
                type: string
                example:
                  AB
              country:
                type: string
                example:
                  USA
              zip:
                type: string
                example:
                  10001
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  myMazda
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
              email:
                type: string
                example:
                  test@example.com
              mobile:
                type: string
                example:
                  9191234567
              userSetting:
                type: object
                properties:
                  deliveryPreference:
                    type: object
                    properties:
                      email:
                        type: boolean
                        example: true
                      sms:
                        type: boolean
                        example: true
                      pushNotification:
                        type: boolean
                        example: false
                  appcode:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        example: true
                      value:
                        type: string
                        example: '5555'
              tosVersion:
                type: string
                example:
                  v1
              tosInfo:
                type: object
                properties:
                  deviceId:
                    type: string
                    example: QVP0DIztG2id5m+5CZC+Xg==
                  appId:
                    type: string
                    example: myMazda
              privacyPolicyVersion:
                type: string
                example:
                  v1
              privacyPolicyInfo:
                type: object
                properties:
                  deviceId:
                    type: string
                    example: QVP0DIztG2id5m+5CZC+Xg==
                  appId:
                    type: string
                    example: myMazda
              additionalInfo:
                type: object
                properties:
                  gender:
                    type: string
                    example:
                      MALE
                  birthday:
                    type: string
                    example:
                      1986-10-18T00:00:00Z
                  phone:
                    type: string
                  region:
                    type: string
                    example:
                      us
                  userInformation:
                    type: string
                    example:
                      "{\"personalData\":{\"familyNameKana\":\"\",\"firstNameKana\":\"\",\"postalCode1\":\"\",\"postalCode2\":\"\",\"streetAddress1\":\"\",\"streetAddress2\":\"\",\"streetAddress3\":\"\",\"mobilePhoneNumber1\":\"\",\"mobilePhoneNumber2\":\"\",\"mobilePhoneNumber3\":\"\",\"fixPhoneNumber1\":\"\",\"fixPhoneNumber2\":\"\",\"fixPhoneNumber3\":\"\"},\"carInsuranceInformation\":{\"contractPresence\":\"\",\"insuranceCompanyName\":\"\",\"contractorName\":\"\"},\"jafEnrollmentInformation\"{\"contractPresence\":\"\",\"contractorName\":\"\",\"membershipNumber\":\"\"},\"mzPlusCardInformation\":{\"contractPresence\":\"\",\"contractorName\":\"\",\"cstomerNumber\":\"\"}}"

        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            $ref: '#/definitions/AuthResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

    put:
      tags:
        - user
      summary: "User info update from a mobile app"
      description: "User registration API called by server.\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN)"
      operationId: "updateUserInfo from mobile app"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: "user info"
          schema:
            type: object
            required:
              - userId
              - locale
              - appId
              - deviceId
              - uid
            properties:
              userId:
                type: string
                example:
                  test@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
              #                - mobile
              firstName:
                type: string
                example:
                  John
              lastName:
                type: string
                example:
                  Smith
              street1:
                type: string
                example:
                  100 Main St,
              street2:
                type: string
                example:
                  Apt 101
              city:
                type: string
                example:
                  Spring Field
              state:
                type: string
                example:
                  AB
              country:
                type: string
                example:
                  USA
              zip:
                type: string
                example:
                  10001
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  myMazda
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e123
              userSetting:
                type: object
                properties:
                  deliveryPreference:
                    type: object
                    properties:
                      email:
                        type: boolean
                        example: true
                      sms:
                        type: boolean
                        example: true
                      pushNotification:
                        type: boolean
                        example: false
                  appcode:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        example: true
                      value:
                        type: string
                        example: '5555'
              tosVersion:
                type: string
                example:
                  v1
              tosInfo:
                type: object
                properties:
                  deviceId:
                    type: string
                    example: QVP0DIztG2id5m+5CZC+Xg==
                  appId:
                    type: string
                    example: myMazda
              privacyPolicyVersion:
                type: string
                example:
                  v1
              privacyPolicyInfo:
                type: object
                properties:
                  deviceId:
                    type: string
                    example: QVP0DIztG2id5m+5CZC+Xg==
                  appId:
                    type: string
                    example: myMazda
              additionalInfo:
                type: object
                properties:
                  age:
                    type: string
                    example: 27
                  sex:
                    type: integer
                    example: 0
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

    delete:
      tags:
        - "user"
      summary: "Delete user from a mobile app"
      description: "Delete user from a mobile app.\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN)"
      operationId: "deleteUser from mobile app"
      security:
        - JWTAuth: []
      produces:
        - "application/json"
      parameters:
        - name: userId
          in: query
          description: "Email"
          required: true
          type: string
        - name: "userIdType"
          in: "query"
          type: "array"
          description: "User id type. If it is missing, the default is email"
          required: false
          items:
            type: "string"
            enum:
              - "email"
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
        - name: uid
          in: query
          type: string
          description: "UID"
          required: true
      responses:
        200:
          description: "Successful transaction"
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: "Invalid input"
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/user/login:
    # Should be GET in REST semantics but use POST for security
    post:
      tags:
        - user
      summary: "User login in from a mobile app"
      description: "User login in by providing credentials\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_CREDENTIAL,ALREADY_EXIST,USER_LOCKED)"
      operationId: "login"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          description: credentails, app and device
          schema:
            type: object
            required:
              - userId
              - password
              - appId
              - deviceId
              - locale
            properties:
              userId:
                type: string
                description: email address or phone number.
              userIdType:
                type: string
                description: email or mobile. use email by default
              password:
                type: string
                description: User's password, should be encryped using the given key
              appId:
                type: string
                description: Application id of mobile app
              deviceId:
                type: string
                description: Id of mobile device
              locale:
                type: string
                description: "Locale"
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            properties:
              status:
                type: string
                enum:
                  - OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                required:
                  - userIdType
                  - refreshTokenExpirationTs
                  - accessToken
                  - userId
                  - refreshToken
                  - uid
                properties:
                  uid:
                    type: string
                    example: d41b4c67-a284-4aea-a5f8-e81791d47abc
                  userId:
                    type: string
                    description: "User id"
                    example: test@example.com
                  userIdType:
                    type: string
                    example: email
                  accessToken:
                    type: string
                    description: "access token for authorization"
                    example: eyJraWQiOiIwIiwiYWxnIjoiRVMyNTYifQ.eyJjb20ubXN0ci51c2hlci5vdHMiOiJcL290c1wvIiwic3ViIjoiTU9CSUxFOk1hemRhQXBwOmVtYWlsOnRlc3QxNTMwOTg2MDkyQGEuY29tIiwiYXVkIjpbInVzaGVyIiwia2ludGFybyJdLCJjb20ubXN0ci51c2hlci5kZXZpY2UiOiJHS0tudVJCRXFXQ0h3aEV4S1lOaGNnPT0iLCJpc3MiOiJ1c2hlciIsImV4cCI6MTUzMDk4ODY4NywiaWF0IjoxNTMwOTg2MDk1LCJqdGkiOiI2OTFhMDEyMC1iMzIyLTQxMTAtODczZC0zZmJkNjYxNDM3OWMuY2JpbHRiWmdPK2xNM1wvNXJZWW4yT1NVUFdSQVhOQmoxcUlPQWRMVHpWaG10In0.X4tjU9Nvi5Yw-9acav_hseBj-8zMvIkNS44FY37R-ikdARJyMsUUDwpbjK3doGs-bTnKlUPWrf5TvZqr8ikxeQ
                  accessTokenExpirationTs:
                    type: integer
                    format: int64
                    example: 1529830451
                  refreshToken:
                    type: string
                    description: "refresh to renew token without login"
                    example: 691a0120-b322-4110-873d-3fbd6614379c.xyou9LRUdQPVlN4RiH1Any69/bfiqtRHMLs33SCPkV3rPTMXzSbs+CpLcejDQzU/OIthB+p1trknJEnkOeVDdNBF
                  refreshTokenExpirationTs:
                    type: integer
                    format: int64
                    example: 1531032751
                  partner1Id:
                    type: string
                    example: 963521485
                  partner2Id:
                    type: string
                    example: 25
                  loginWithTemporaryPassword:
                    type: boolean
                    example: false
        400:
          description: Invalid request
          schema:
            properties:
              status:
                type: string
                example: INVALID_CREDENTIALS
              reason:
                type: string
                example: invalid_credentials
              localizedMessage:
                type: string
                example: Username or password is incorrect
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/user/logout:
    post:
      tags:
        - user
      summary: "User logout from a mobile app"
      description: "Logout by user called by mobile client\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND,DEVICE_NOT_FOUND)"
      operationId: "logout"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          description: request body
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
              - locale
              - appId
              - deviceId
              - uid
            properties:
              userId:
                type: string
                example:
                  test@example.com
                description: user id.
              userIdType:
                type: string
                example:
                  email
                description: email or mobile. Default value is 'email' if the parameter is missing.
              appId:
                type: string
                example:
                  myMazda
                description: Application id of mobile app
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
                description: Id of mobile device
              uid:
                type: string
                example:
                  d41b4c67-a284-4aea-a5f8-e81791d47abc
                description: usher id of user
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Authentication data
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/user/details:
    get:
      tags:
        - user
      summary: "Get user details by usher id from a mobile app"
      description: "Get user details by usher id from a mobile app\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN)"
      operationId: "getUserDetailsByEmail"
      security:
        - JWTAuth: []
      produces:
        - "application/json"
      parameters:
        - name: userId
          in: query
          description: "The userid that needs to be fetched data for"
          required: true
          type: "string"
        - name: userIdType
          in: query
          description: "The userid type that needs to be fetched data for. Default value is 'email' if the parameter is missing"
          required: false
          type: "string"
        - name: "appId"
          in: query
          description: "The Application id that needs to be fetched data for"
          required: true
          type: string
        - name: "deviceId"
          in: "query"
          description: "The device id that needs to be fetched data for"
          required: true
          type: string
        - name: "uid"
          in: "query"
          description: "The uid that needs to be fetched data for"
          required: true
          type: string
        - name: locale
          in: query
          description: "locale"
          required: true
          type: string
        - name: ts
          in: query
          description: "Unix time"
          type: string
          required: false
      responses:
        200:
          description: "Successful transaction"
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: success
              localizedMessage:
                type: string
                example: success
              data:
                type: object
                required:
                  - lastName
                  - email
                  - firstName
                properties:
                  status:
                    type: string
                    example: ACTIVE
                  role:
                    type: string
                    example: default
                  mobile:
                    type: string
                    example: 15713439808
                  mobileStatus:
                    type: string
                    example:  active
                  email:
                    type: string
                    example: ztang@microstrategy.com1
                  emailStatus:
                    type: string
                    example: pending
                  firstName:
                    type: string
                    example: Anqi
                  uid:
                    type: string
                    example: b38ec62a-a923-4107-861f-30bd99430564
                  partner1Id:
                    type: string
                    example: 963521485
                  partner2Id:
                    type: string
                    example: 25
                  lastName:
                    type: string
                    example: Wang
                  street1:
                    type: string
                    example: Main st SE
                  street2:
                    type: string
                    example: 1213 N
                  city:
                    type: string
                    example: Blacksburg
                  origin:
                    type: string
                    example: USER_IMPORT
                  selfRegistered:
                    type: boolean
                    example: true
                  mobileVerified:
                    type: boolean
                    example: true
                  emailVerified:
                    type: boolean
                    example: true
                  updatedTs:
                    type: integer
                    example: 1555955959
                  state:
                    type: string
                    example: VA
                  zip:
                    type: string
                    example: 24060
                  country:
                    type: string
                    example: USA
                  userSetting:
                    type: object
                    required:
                      - appcode
                    properties:
                      deliveryPreference:
                        type: object
                        properties:
                          email:
                            type: boolean
                            example: true
                          sms:
                            type: boolean
                            example: true
                          pushNotification:
                            type: boolean
                            example: false
                      appcode:
                        type: object
                        required:
                          - enabled
                        properties:
                          enabled:
                            type: boolean
                            example: true
                          value:
                            type: string
                            example: '5555'
                  tosVersion:
                    type: string
                    example:
                      v1
                  tosInfo:
                    type: object
                    properties:
                      deviceId:
                        type: string
                        example: QVP0DIztG2id5m+5CZC+Xg==
                      appId:
                        type: string
                        example: myMazda
                  privacyPolicyVersion:
                    type: string
                    example:
                      v1
                  privacyPolicyInfo:
                    type: object
                    properties:
                      deviceId:
                        type: string
                        example: QVP0DIztG2id5m+5CZC+Xg==
                      appId:
                        type: string
                        example: myMazda
                  additionalInfo:
                    type: object
                    properties:
                      gender:
                        type: string
                        example:
                          MALE
                      birthday:
                        type: string
                      phone:
                        type: string
                      region:
                        type: string
                        example:
                          us
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/user/contactInfo:
    put:
      tags:
        - user
      summary: "update a user's contactInfo from a mobile app"
      description: "update a user's contactInfo from a mobile app.\nError
              Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND)"
      operationId: "UpdateUserContactInfoFromMobile"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - userId
              - uid
              - mobile
              - locale
              - appId
              - deviceId
            properties:
              userId:
                type: string
                description: email address or phone number.
              userIdType:
                type: string
                description: email or mobile. use email by default
              uid:
                type: string
                example:
                  d41b4c67-a284-4aea-a5f8-e81791d47abc
              mobile:
                type: string
                example: 5555555555
              sid:
                type: string
                description: The session id returned from otp verification.
              appId:
                type: string
                example:
                  myMazda
                description: Application id of mobile app
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
                description: Id of mobile device
              locale:
                type: string
                description: "Locale"
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/user/appcode:
    get:
      tags:
        - user
      summary: "Get App code from a mobile app"
      description: "Get App code from a mobile app\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "getAppcode"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "User id"
          required: true
        - name: userIdType
          in: query
          type: array
          items:
            type: string
            enum:
              - email
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: uid
          in: query
          description: "The uid that needs to be fetched data for"
          required: true
          type: string
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: "Successful transaction"
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                properties:
                  enabled:
                    type: boolean
                    example: true
                  value:
                    type: string
                    example: "5555"
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'
    put:
      tags:
        - user
      summary: "Update App code from a mobile app"
      description: "Update App code from a mobile app\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "updateAppcode"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - userId
              - uid
              - enabled
              - locale
              - appId
              - deviceId
            properties:
              userId:
                type: string
                description: email address or phone number.
              userIdType:
                type: string
                description: email or mobile. use email by default
              uid:
                type: string
                example:
                  d41b4c67-a284-4aea-a5f8-e81791d47abc
              enabled:
                type: boolean
                example: true
                description: Enable or disable Appilication PIN
              value:
                type: string
                example: "5555"
                description: The value of appcode
              appId:
                type: string
                example:
                  myMazda
                description: Application id of mobile app
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
                description: Id of mobile device
              locale:
                type: string
                description: "Locale"
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/user/appcode/verify:
    get:
      tags:
        - user
      summary: "Verify App code from a mobile app"
      description: "Verify App code from a mobile app\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "verifyAppcode"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "User id"
          required: true
        - name: userIdType
          in: query
          type: array
          items:
            type: string
            enum:
              - email
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: uid
          in: query
          description: "The uid that needs to be fetched data for"
          required: true
          type: string
        - name: appcode
          in: query
          description: "The appcode input by user"
          required: true
          type: string
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: "Successful transaction"
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/otp/send:
    post:
      tags:
        - otp
      summary: "Send an OTP from a mobile app"
      description: "Send an one time passcode\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "sendOtp"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          description: request body
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
              - recipient
              - recipientType
              - purpose
              - appId
              - deviceId
              - uid
              - locale
            properties:
              userId:
                type: string
                example:
                  test@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
              recipient:
                type: string
                example:
                  test@example.com
              recipientType:
                type: string
                example:
                  email
                enum:
                  - email
                  - mobile
                  - vehicle
              isFutureUpdate:
                type: boolean
                description: "indicate OTP used for verification before update such as updating phone number"
              purpose:
                type: string
                example:
                  v_email
                enum:
                  - v_email
                  - v_mobile
                  - cv_enroll
              appId:
                type: string
                example:
                  myMazda
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
              uid:
                type: string
                example:
                  d41b4c67-a284-4aea-a5f8-e81791d47abc
              locale:
                type: string
                example:
                  "en"
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            $ref: '#/definitions/SendOtpResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/otp/send/reg:
    post:
      tags:
        - otp
      summary: "Send an OTP from a mobile app for registration"
      description: "Send an one time passcode\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "sendOtpReg"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          description: request body
          in: body
          required: true
          schema:
            type: object
            required:
              - recipient
              - recipientType
              - purpose
              - appId
              - deviceId
              - locale
            properties:
              recipient:
                type: string
                example:
                  test@example.com
              recipientType:
                type: string
                example:
                  mobile
                enum:
                  - email
                  - mobile
              purpose:
                type: string
                example:
                  v_email
                enum:
                  - v_email
                  - v_mobile
              appId:
                type: string
                example:
                  myMazda
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
              locale:
                type: string
                example:
                  "en"
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            $ref: '#/definitions/SendOtpResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/otp/verify:
    get:
      tags:
        - otp
      summary: "Verify OTP from a mobile app"
      description: "Verify OTP response from user\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "verifyOtp"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - in: query
          name: recipient
          type: string
          description: "Recipient linked to the session, could by a email address, a mobile number or a internalVin"
          required: true
        - in: query
          name: recipientType
          type: string
          description: "Recipient type of the recipient"
          enum:
            - mobile
            - email
            - vehicle
          required: true
        - in: query
          name: purpose
          type: string
          description: "Purpose for OTP"
          required: true
        - in: query
          name: appId
          type: string
          description: "Application id"
          required: true
        - in: query
          name: deviceId
          type: string
          description: "Id of mobile device"
          required: true
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
        - in: query
          name: userId
          type: string
          description: "User id"
          required: true
        - in: query
          name: userIdType
          type: string
          description: "User id type. If it is missing, the default is email"
          required: false
        - in: query
          name: code
          type: string
          description: "OTP code"
          required: true
        - in: query
          name: uid
          type: string
          description: "UID"
          required: true
        - in: query
          name: locale
          type: string
          description: "Locale"
          required: true
        - in: query
          name: sid
          type: string
          description: "session id"
          required: true
        - in: query
          name: isFutureUpdate
          type: boolean
          description: "verify otp code for future update"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            $ref: '#/definitions/SendOtpResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'


  /appapi/v1/otp/verify/reg:
    get:
      tags:
        - otp
      summary: "Verify OTP from a mobile app for registration or reset pwd"
      description: "Verify OTP response from user for registration or reset pwd\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "verifyOtpReg"
      produces:
        - application/json
      parameters:
        - in: query
          name: recipient
          type: string
          description: "Recipient linked to the sid, could by a email address or a mobile number. This would be a required field if server turn on recipient check switch."
          required: false
        - in: query
          name: recipientType
          type: string
          description: "Recipient type of the recipient"
          enum:
            - mobile
            - email
          required: true
        - in: query
          name: purpose
          enum:
            - v_email
            - v_mobile
            - 4got_pwd
          type: string
          description: "Purpose for OTP"
          required: true
        - in: query
          name: appId
          type: string
          description: "Application id"
          required: true
        - in: query
          name: deviceId
          type: string
          description: "Id of mobile device"
          required: true
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
        - in: query
          name: code
          type: string
          description: "OTP code"
          required: true
        - in: query
          name: locale
          type: string
          description: "Locale"
          required: true
        - in: query
          name: sid
          type: string
          description: "session id"
          required: true
      responses:
        200:
          description: Successful transaction
          schema:
            $ref: '#/definitions/SendOtpResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'


  /appapi/v1/otp/forgotPassword:
    post:
      tags:
        - "otp"
      summary: "User forgot password  from a mobile app"
      description: "Send an one time passcode to user to reset password\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "forgotPassword"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
              - recipientType
              - appId
              - deviceId
              - locale
            properties:
              userId:
                type: string
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
              recipientType:
                type: string
              appId:
                type: string
              deviceId:
                type: string
              locale:
                type: string
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        '200':
          description: Success. OTP sent
          schema:
            $ref: '#/definitions/SendOtpResponse'
        '400':
          description: Invalid request
          schema:
            type: object
            properties:
              status:
                type: string
                example: INVALID_INPUT
              reason:
                type: string
                example: Missing or invalid input parameters
              localizedMessage:
                type: string
                example: Missing or invalid input parameters
        '500':
          description: Server error
          schema:
            type: object
            properties:
              status:
                type: string
                example: INTERNAL_SERVER_ERROR
              reason:
                type: string
                example: Internal server error
              localizedMessage:
                type: string
                example: locale Interal server error

  /appapi/v1/account/resetPassword:
    post:
      tags:
        - account
      summary: "Reset user password from a mobile app"
      description: "reset password when user forgot password\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,USER_NOT_FOUND)"
      operationId: "resetPasswordFromApp"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: reset password parameter
          required: true
          schema:
            type: object
            required:
              - userId
              - appId
              - deviceId
              - password
              - code
              - locale
              - sid
            properties:
              userId:
                type: string
                example: test@example.com
                description: user Id
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
              appId:
                type: string
                example: application Id
                description: MazdaApp
              deviceId:
                type: string
                example: device Id
                description: rPaPcHqZreNFAE5yrb==
              sid:
                type: string
                example: 5d13d4de-4f1d-4d38-a91f-8668639fabd7
                description: session id
              password:
                type: string
                example: ENCRYPTEDsamplePasswd
                description: new password submitted by user
              locale:
                type: string
                example: us
                description: locale
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                required:
                  - isPasswordChanged
                properties:
                  isPasswordChanged:
                    type: boolean
                  isPasswordPolicyMet:
                    type: boolean
                  isPasswordHistoryPolicyMet:
                    type: boolean
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/account/changePassword:
    post:
      tags:
        - account
      summary: "Change user password from a mobile app"
      description: "change password\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND)"
      operationId: changePassword
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: change password parameter
          required: true
          schema:
            type: object
            required:
              - userId
              - appId
              - deviceId
              - oldPassword
              - newPassword
              - locale
              - uid
            properties:
              userId:
                type: string
                example:
                  aaa@bbb.com
              uid:
                type: string
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                enum:
                  - email
                example:
                  email
              appId:
                type: string
                example:
                  MyMazda
              deviceId:
                type: string
                example:
                  uuid of device
              oldPassword:
                type: string
              newPassword:
                type: string
              locale:
                type: string
                example:
                  jp
                enum:
                  - en
                  - jp
                  - zh
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                required:
                  - isPasswordChanged
                properties:
                  isPasswordChanged:
                    type: boolean
                  isPasswordPolicyMet:
                    type: boolean
                  isOldPasswordVerified:
                    type: boolean
                  isPasswordHistoryPolicyMet:
                    type: boolean
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/iot/findByEmail:
    get:
      tags:
        - IoT
      summary: "Get IoT device information from a mobile app"
      description: "Get IoT device information given user's email\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND)"
      operationId: getIotDeviceByEmailFromApp
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "User Id, email"
          required: true
        - name: userIdType
          in: query
          type: string
          description: "User Id type"
        - name: uid
          in: query
          type: string
          description: "UID"
          required: true
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: iotType
          in: query
          type: string
          description: "IoT type, should be (vehicle) for this API"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: IoT device data
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/Vehicle'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/iot/addToUser:
    post:
      tags:
        - IoT
      summary: "Add a IoT device to user from a mobile app"
      description: "Add a new IoT device using provided data\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND)"
      operationId: addIotDeviceFromApp
      security:
        - JWTAuth: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: "The JSON object for IoT device"
          required: true
          schema:
            type: object
            required:
              - userId
              - appId
              - deviceId
              - locale
              - uid
              - iotId
              - iotType
            properties:
              userId:
                type: string
                example:
                  aaa@bbb.com
              uid:
                type: string
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                enum:
                  - email
                example:
                  email
              appId:
                type: string
                example:
                  MyMazda
              deviceId:
                type: string
                example:
                  uuid of device
              iotId:
                type: string
              iotType:
                type: string
                description: "IoT type, should be (vehicle) for this API"
              iotName:
                type: string
              locale:
                type: string
                example:
                  jp
                enum:
                  - en
                  - jp
                  - zh
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Add IoT device to user success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                $ref: '#/definitions/Vehicle'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/iot:
    put:
      tags:
        - IoT
      summary: "Update IoT device nickname belong to user from a mobile app"
      description: "Add a new IoT device using provided data\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,OVER_RATE_LIMIT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND)"
      operationId: updateIotDeviceNameFromApp
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "The JSON object for IoT device"
          required: true
          schema:
            type: object
            required:
              - userId
              - appId
              - deviceId
              - locale
              - uid
              - iotId
              - iotType
            properties:
              userId:
                type: string
                example:
                  aaa@bbb.com
              uid:
                type: string
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                enum:
                  - email
                example:
                  email
              appId:
                type: string
                example:
                  MyMazda
              deviceId:
                type: string
                example:
                  uuid of device
              iotId:
                type: string
              iotType:
                type: string
                description: "IoT type, should be (vehicle) for this API"
              iotName:
                type: string
                description: "Nickname of the IoT device, should be (vehicle nickname) for this API"
              locale:
                type: string
                example:
                  jp
                enum:
                  - en
                  - jp
                  - zh
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Add IoT device to user success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                $ref: '#/definitions/Vehicle'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/iot/removeFromUser:
    delete:
      tags:
        - IoT
      summary: "Delete a IoT device from user from a mobile app"
      description: "Delete a IoT device that links to a user\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT,INVALID_ACCESS_TOKEN,USER_NOT_FOUND)"
      operationId: deleteIotDeviceFromUserFromApp
      security:
        - JWTAuth: []
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "query"
          type: "string"
          description: "User id"
          required: true
        - name: "userIdType"
          in: "query"
          type: "string"
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: uid
          in: query
          type: string
          description: "UID"
          required: true
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: iotId
          in: query
          type: string
          description: "IoT UUID, VIN number of vehicle"
          required: true
        - name: iotType
          in: query
          type: string
          description: "IoT type, should be (vehicle) for this API"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/system/accountPolicy:
    get:
      tags:
        - system
      summary: "Get account policy information from a mobile app"
      description: "Get policy information, e.g., password policy\nError Code:\n500(INTERNAL_SERVER_ERROR)\n400(INVALID_INPUT)"
      operationId: getAccountPolicy
      produces:
        - application/json
      parameters:
        - in: query
          name: appId
          type: string
          description: "Application id"
          required: true
        - in: query
          name: deviceId
          type: string
          description: "Id of mobile device"
          required: true
        - in: query
          name: locale
          type: string
          description: "Locale"
          required: true
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: account policy
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                $ref: '#/definitions/AccountPolicy'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/system/encryptionKey:
    get:
      tags:
        - system
      summary: "Get password encryption key from a mobile app"
      description: "Get public key to encrypt password\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT"
      operationId: getEncryptionKey
      produces:
        - application/json
      parameters:
        - in: query
          name: appId
          type: string
          description: "Application id"
          required: true
        - in: query
          name: deviceId
          type: string
          description: "Id of mobile device"
          required: true
        - in: query
          name: locale
          type: string
          description: "Locale"
          required: true
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                $ref: '#/definitions/EncryptionKey'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/token/refresh :
    post:
      tags:
        - token
      summary: "refresh accessToken with refresh token from a mobile app"
      description: "refresh expired or revoked accessToken with valid refresh token\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: "body"
          description: "The JSON object for vehicle"
          required: true
          schema:
            type: object
            required:
              - userId
              - uid
              - appId
              - deviceId
              - refreshToken
              - locale
            properties:
              userId:
                type: string
                example:
                  aaa@bbb.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                enum:
                  - email
                example:
                  email
              appId:
                type: string
                example:
                  MyMazda
              deviceId:
                type: string
                example:
                  uuid of device
              refreshToken:
                type: string
              uid:
                type: string
              locale:
                type: string
                example:
                  jp
                enum:
                  - en
                  - jp
                  - zh
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Successful transaction
          schema:
            properties:
              status:
                type: string
                enum:
                  - OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
                required:
                  - userId
                  - accessToken
                  - refreshToken
                  - refreshTokenExpirationTs
                  - userIdType
                properties:
                  uid:
                    type: string
                    example: d41b4c67-a284-4aea-a5f8-e81791d47abc
                  userId:
                    type: string
                    description: "User id"
                    example: test@example.com
                  userIdType:
                    type: string
                    example: email
                  accessToken:
                    type: string
                    description: "access token for authorization"
                    example: eyJraWQiOiIwIiwiYWxnIjoiRVMyNTYifQ.eyJjb20ubXN0ci51c2hlci5vdHMiOiJcL290c1wvIiwic3ViIjoiTU9CSUxFOk1hemRhQXBwOmVtYWlsOnRlc3QxNTMwOTg2MDkyQGEuY29tIiwiYXVkIjpbInVzaGVyIiwia2ludGFybyJdLCJjb20ubXN0ci51c2hlci5kZXZpY2UiOiJHS0tudVJCRXFXQ0h3aEV4S1lOaGNnPT0iLCJpc3MiOiJ1c2hlciIsImV4cCI6MTUzMDk4ODY4NywiaWF0IjoxNTMwOTg2MDk1LCJqdGkiOiI2OTFhMDEyMC1iMzIyLTQxMTAtODczZC0zZmJkNjYxNDM3OWMuY2JpbHRiWmdPK2xNM1wvNXJZWW4yT1NVUFdSQVhOQmoxcUlPQWRMVHpWaG10In0.X4tjU9Nvi5Yw-9acav_hseBj-8zMvIkNS44FY37R-ikdARJyMsUUDwpbjK3doGs-bTnKlUPWrf5TvZqr8ikxeQ
                  accessTokenExpirationTs:
                    type: integer
                    format: int64
                    example: 1529830451
                  refreshToken:
                    type: string
                    description: "refresh to renew token without login"
                    example: 691a0120-b322-4110-873d-3fbd6614379c.xyou9LRUdQPVlN4RiH1Any69/bfiqtRHMLs33SCPkV3rPTMXzSbs+CpLcejDQzU/OIthB+p1trknJEnkOeVDdNBF
                  refreshTokenExpirationTs:
                    type: integer
                    format: int64
                    example: 1531032751084
                  partner1Id:
                    type: string
                    example: 963521485
                  partner2Id:
                    type: string
                    example: 25
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/mobile:
    put:
      tags:
        - mobile
      summary: "Update mobile device info from a mobile app"
      description: "Update mobile device info, invoked by SDK\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEND\nUSER_NOT_FOUND"
      operationId: "updateMobileInfo"
      security:
        - ServiceAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
        - name: body
          in: body
          required: true
          description: "mobile device info"
          schema:
            type: object
            required:
              - userId
              - locale
              - appId
              - deviceId
              - uid
            properties:
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
                  - mobile
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
              deviceName:
                type: string
                example:
                  my iphone 7
              deviceType:
                type: string
                description: "Type of device, e.g ios, android"
                example:
                  ios
              deviceOsVersion:
                type: string
                description: "OS version of device"
                example:
                  iOS 11.4
              notificationToken:
                type: string
                description: "APNS notification token or GCM notification token"
              apnsEnv:
                type: string
                description: "Indicating which APNS server to use, for ios notification only. e.g. 'Production',
              'Sandbox', the default is 'Production' if the parameter is missing."
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  MazdaApp
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                $ref: '#/definitions/Mobile'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/message/sendInvite:
    post:
      tags:
        - cv
      summary: "Send invitation to another user"
      description: "Send invitation to another user, invoked by SDK\nError
          Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "sendInvite"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - uid
              - userId
              - iotId
              - iotType
              - receiverId
              - receiverType
              - locale
              - appId
              - deviceId
            properties:
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email."
                example:
                  email
                enum:
                  - email
                  - mobile
              iotId:
                type: string
                example:
                  "10001"
              iotType:
                type: string
                description: "Type of iot device, e.g internalVin."
                example:
                  internalVin
              receiverId:
                type: string
                description: "Where to send the invitation, email or mobile"
                example:
                  recipient@example.com
              receiverType:
                type: string
                description: "email"
                example:
                  email
              content:
                $ref:  '#/definitions/IotMessageContent'
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  MazdaApp
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==



      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                $ref: '#/definitions/Message'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/message/requestAccess:
    post:
      tags:
        - cv(disable)
      summary: "Request for access for iot device"
      description: "Request to be second driver\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "messageRequestAccess"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: ts
          type: string
          description: "Unix time"
          required: false
        - name: body
          in: body
          required: true
          description: "mobile device info"
          schema:
            type: object
            required:
              - locale
              - appId
              - deviceId
              - iotId
              - iotType
              - uid
            properties:
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
                  - mobile
              deviceName:
                type: string
                example:
                  my iphone 7
              deviceType:
                type: string
                description: "Type of device, e.g ios, android"
                example:
                  ios
              deviceOsVersion:
                type: string
                description: "OS version of device"
                example:
                  iOS 11.4
              iotId:
                type: string
                example:
                  3CZRE38359G036911
              iotType:
                type: string
                description: "Type of iot device, e.g vehicle."
                example:
                  vehicle
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  MazdaApp
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                $ref: '#/definitions/IotMessage'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/messages:
    get:
      tags:
        - cv
      summary: "Get requests received or invitations sent"
      description: "Get requests\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "getMessages"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "User Id, email"
          required: true
        - name: userIdType
          in: query
          type: string
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: uid
          in: query
          type: string
          description: "UID"
          required: true
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: messageType
          in: query
          type: string
          description: "Type of message, (e.g. \"send\" or \"receive\")"
        - name: purpose
          in: query
          type: string
          description: "Purpose of message, (e.g. \"INVITATION\")"
          required: false
        - name: status
          in: query
          type: string
          description: "Status of message, (e.g. \"PENDING\", \"REJECT\" or \"COMPLETE\")"
          required: false
        - name: iotType
          in: query
          type: string
          description: "IoT type, could be vehicle or internalVin for this API"
          required: false
        - name: iotId
          in: query
          type: string
          description: "IoT UUID, VIN number of vehicle, or value of internalVin"
          required: false
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: array
                items:
                  $ref: '#/definitions/IotMessage'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/message/approveAccess:
    post:
      tags:
        - cv(disable)
      summary: "Approve access"
      description: "Approve access\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "approveAccess"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
        - name: body
          in: body
          required: true
          description: "mobile device info"
          schema:
            type: object
            required:
              - userId
              - uid
              - locale
              - appId
              - deviceId
              - messageId
            properties:
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
                  - mobile
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
              messageId:
                type: string
                description: "Message Id"
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  MazdaApp
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  /appapi/v1/message:
    delete:
      tags:
        - cv
      summary: "Delete Message"
      description: "Delete Message\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "deleteRequest"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "User Id, email"
          required: true
        - name: userIdType
          in: query
          type: string
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: uid
          in: query
          type: string
          description: "UID"
          required: true
        - name: appId
          in: query
          type: string
          description: "Application id"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device id"
          required: true
        - name: messageId
          in: query
          type: string
          description: "Message Id"
          required: true
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              reason:
                type: string
                example: ""
              localizedMessage:
                type: string
                example: ""
              data:
                type: object
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'


  /appapi/v1/iot/transferOwnership:
    post:
      tags:
        - cv(disable)
      summary: Transfer primary ownership to a secondary owner
      description: "Transfer ownership to a secondary owner, invoked by SDK\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUNAUTHORIZED"
      operationId: transferOwnership
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
              - uid
              - locale
              - appId
              - deviceId
              - iotId
              - iotType
              - transferTo
            properties:
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
                  - mobile
              locale:
                type: string
                example:
                  en
              appId:
                type: string
                example:
                  MazdaApp
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
              iotId:
                type: string
                example:
                  6515b974-354c-48d6-a8a6-dad9dfde769a
              iotType:
                type: string
                example:
                  vehicle
              transferTo:
                type: string
                example:
                  99f73e8a-ca78-4881-b506-a67f35dc020a
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'


  /appapi/v1/iot/revokeSecondaryOwner:
    delete:
      tags:
        - cv(disable)
      summary: Primary driver remove a secondary owner
      description: "A primary owner remove a secondary owner, invoked by SDK\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUNAUTHORIZED"
      operationId: revokeSecondaryOwner
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          type: string
          description: "Email"
          required: true
        - name: userIdType
          in: query
          type: string
          description: "User id type. If it is missing, the default is email"
          required: false
        - name: locale
          in: query
          type: string
          description: "Locale"
          required: true
        - name: appId
          in: query
          type: string
          description: "Application ID"
          required: true
        - name: deviceId
          in: query
          type: string
          description: "Device Id"
          required: true
        - name: uid
          in: query
          type: string
          description: "UID"
          required: true
        - name: iotId
          in: query
          type: string
          required: true
        - name: iotType
          in: query
          type: string
          required: true
        - name: revokeFrom
          in: query
          type: string
          required: true
        - name: ts
          in: query
          type: string
          description: "Unix time"
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'


  /appapi/v1/iot/link:
    delete:
      tags:
        - cv(disable)
      summary: "disconnect iot device link"
      description: "disconnect iot device\nError Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND"
      operationId: "deleteIotLink"
      security:
        - JWTAuth: []
      produces:
        - application/json
      parameters:
        - name: uid
          in: query
          required: true
          type: string
          description: "user uid, example a63649a1-fbcd-4691-b0fd-50f1f094e7ce"
        - name: iotType
          in: query
          required: true
          type: string
          description: "iotId type."
          enum:
            - vehicle
        - name: appId
          in: query
          required: true
          type: string
          description: "application Id."
        - name: deviceId
          in: query
          required: true
          type: string
          description: "deviceId."
        - name: iotId
          in: query
          required: true
          type: string
          description: "iotId. IoT identifier. example 3CZRE38359G036911"
        - name: locale
          in: query
          required: true
          type: string
          description: "locale"
        - name: partner2Id
          in: query
          required: true
          type: string
          description: "Partner 2 id for iot link"
        - name: ts
          in: query
          required: false
          type: string
          description: "Unix timestamp"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  #-----------------------------------------------------------------------------------------------------------------------
  /appapi/v1/message/acceptInvite:
    post:
      tags:
        - cv
      summary: "User accept second driver invitation"
      description: "User accept invitation, invoked by SDK\nError
          Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND\nIOT_MESSAGE_NOT_FOUND\nINVALID_IOT_MESSAGE
          \ncurl -X POST
           -H  \"accept: application/json\" -H
          \"Content-Type: application/json\" -H 'Authorization: Bearer [jwt token]' -d \"{  \"uid\":
          \"a63649a1-fbcd-4691-b0fd-50f1f094e7ce\",  \"userId\":
          \"[email]\",  \"userIdType\": \"email\",  \"code\": \"Le6R1bjwnr34O5jx/mQcBkdR\",  \"locale\": \"jp\" }
          \"https://usher-endpoint.com/appapi/v1/message/acceptInvite\""
      operationId: "acceptInvitation"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
              - uid
              - code
              - locale
              - appId
              - deviceId
            properties:
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
                  - mobile
              code:
                type: string
                description: "Code that represent the invitation from getIotMessage API"
                example:
                  Le6R1bjwnr34O5jx/mQcBkdR
              locale:
                type: string
                enum:
                  - en
                  - jp
                example:
                  en
              appId:
                type: string
                example:
                  myMazda
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==


      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'

  #-----------------------------------------------------------------------------------------------------------------------
  /appapi/v1/message/rejectInvite:
    post:
      tags:
        - cv
      summary: "User reject second driver invitation"
      description: "User reject invitation, invoked by SDK\nError
          Code:\nINTERNAL_SERVER_ERROR\nINVALID_INPUT\nINVALID_ACCESS_TOKEN\nUSER_NOT_FOUND\nIOT_MESSAGE_NOT_FOUND\nINVALID_IOT_MESSAGE
           \ncurl -X POST
           -H  \"accept: application/json\" -H
          \"Content-Type: application/json\" -H 'Authorization: Bearer [jwt token]' -d \"{  \"uid\":
          \"a63649a1-fbcd-4691-b0fd-50f1f094e7ce\",  \"userId\":
          \"[email]\",  \"userIdType\": \"email\",  \"code\": \"Le6R1bjwnr34O5jx/mQcBkdR\",  \"locale\": \"jp\"
          } \"https://usher-endpoint.com/appapi/v1/message/rejectInvite\""
      operationId: "rejectInvitation"
      security:
        - JWTAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
              - uid
              - locale
              - appId
              - deviceId
              - code
            properties:
              uid:
                type: string
                example:
                  a63649a1-fbcd-4691-b0fd-50f1f094e7ce
              userId:
                type: string
                example:
                  text@example.com
              userIdType:
                type: string
                description: "User id type. If it is missing, the default is email"
                example:
                  email
                enum:
                  - email
                  - mobile
              code:
                type: string
                description: "Code received in email/phone/deeplink that represent the invitation"
                example:
                  Le6R1bjwnr34O5jx/mQcBkdR
              locale:
                type: string
                enum:
                  - en
                  - jp
                example:
                  en
              appId:
                type: string
                example:
                  myMazda
              deviceId:
                type: string
                example:
                  QVP0DIztG2id5m+5CZC+Xg==

      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponseInvalidInput'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponseInternalServerError'




definitions:

  User:
    type: object
    properties:
      id:
        type: string
        description: User ID
      username:
        type: string
        description: User name
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: User's last name
      email:
        type: string
        description: User's email address
      status:
        $ref: "#/definitions/UserStatus"

  Mobile:
    type: object
    properties:
      status:
        type: string
        description: Status of device
        example:
          ACTIVE
      deviceId:
        type: string
        description: Device id
      deviceName:
        type: string
        description: Device name
      deviceType:
        type: string
        description: Type of device
      deviceOS:
        type: string
        description: OS of device
      appId:
        type: string
        description: Application id
      deviceNotificationToken:
        type: string
        description: Apns/GCM token, Scheme ([DEVICETYPE]-[SERVERTYPE]-[TOKEN])
        example:
          A-P-5b9db70655dfbf81e8da446010cb36f77ee97dfdbd0e09d208375e8d7ae9d90f

  AuthResponse:
    type: object
    properties:
      id:
        type: string
        description: User ID
      sid:
        type: string
        description: Login session ID
      username:
        type: string
        description: User name
      status:
        $ref: "#/definitions/UserStatus"

  SendOtpResponse:
    type: object
    properties:
      status:
        type: string
        description: status
        enum:
          - OK
      reason:
        type: string
        description: failed reason
      localizedMessage:
        type: string
        description: localized failure message
      data:
        type: object
        description: json data payload
        required:
          - sid
        properties:
          sid:
            type: string
            description: session id

        example:
          "{sid : 5d13d4de-4f1d-4d38-a91f-8668639fabd7}"


  SuccessResponse:
    type: object
    properties:
      status:
        type: string
        description: status
        enum:
          - OK
      reason:
        type: string
        description: failed reason
      localizedMessage:
        type: string
        description: localized failure message


  OtpRequest:
    type: object
    properties:
      sid:
        type: string
        description: "Authentication Session ID"
      challengeId:
        type: string
        description: "Challenge ID for this OTP challenge"
      mechanism:
        $ref: "#/definitions/OtpMechanism"
      deviceId:
        type: string
        description: Device id or Email address
      prompt:
        type: string
        description: Prompt/challenge displayed to user

  VerificationResult:
    type: object
    properties:
      challengeId:
        type: string
        description: "OTP Challenge ID"
      status:
        $ref: "#/definitions/VerificationStatus"

      prompt:
        type: string
        description: Prompt/challenge displayed to user

  Vehicle:
    type: object
    required:
      - vin
      - userRole
      - userRoleUpdatedTs
      - status
    properties:
      vin:
        type: string
        minLength: 11
        maxLength: 17
        description: "Vehicle's VIN"
      nickname:
        type: string
        description: "Vehicle's nickname"
      model:
        type: string
        description: "Vehicle's model"
      status:
        type: string
        example: ACTIVE
      primaryDriver:
        type: object
        description: primary driver object
      partner2Id:
        type: string
        description: partner 2 id
      secondaryDrivers:
        type: object
        description: secondary driver list
      year:
        type: integer
        format: int32
        minimum: 1900
        maximum: 2100
        description: "Vehicle's model year"
      userRole:
        type: string
        description: User's role
        example:
          Driver
      userRoleUpdatedTs:
        type: string
        format: date
        description: User's role since

  AccountPolicy:
    type: object
    required:
      - passwordPolicy
    properties:
      passwordPolicy:
        $ref: '#/definitions/PasswordPolicy'
      verificationPolicy:
        $ref: '#/definitions/verificationPolicy'
      otpConfig:
        $ref: '#/definitions/otpConfig'
      appcodeConfig:
        $ref: '#/definitions/appcodeConfig'

  PasswordPolicy:
    type: object
    required:
      - allowSpecialCharacter
      - requireAlphabeticCharacter
      - maximumPasswordLength
      - maxPasswordHistory
      - minimumPasswordLength
      - requireLowercaseCharacter
      - requireNumbers
      - requireSymbols
      - requireUppercaseCharacter
    properties:
      minimumPasswordLength:
        type: integer
        description: "Password's minimum length"
      maximumPasswordLength:
        type: integer
        description: "Password's maximum length"
      requireLowercaseCharacter:
        type: boolean
        description: "Whether password require lowercase character"
      requireUppercaseCharacter:
        type: boolean
        description: "Whether password require uppercase character"
      requireAlphabeticCharacter:
        type: boolean
        description: "Whether password require uppercase or lowercase character"
      requireNumbers:
        type: boolean
        description: "Whether password require digit number"
      requireSymbols:
        type: boolean
        description: "Whether password require special symbol"
      allowSpecialCharacter:
        type: string
        description: "Special characters allowed in password"
      maxPasswordHistory:
        type: integer
        description: "The number of unique new passwords that have to be associated with a user account before an old password can be reused"

  verificationPolicy:
    type: object
    properties:
      emailVerificationNonCV:
        type: boolean
        example: false
        description: "Whether email verification is required for a non-CV user when reset password"
      emailVerificationCV:
        type: boolean
        example: true
        description: "Whether email verification is required for a CV user when reset password"
      mobileVerificationNonCV:
        type: boolean
        example: false
        description: "Whether mobile verification is required for a non-CV user when reset password"
      mobileVerificationCV:
        type: boolean
        example: true
        description: "Whether mobile verification is required for a CV user when reset password"

  otpConfig:
    type: object
    properties:
      sessionValidPeriod:
        type: integer
        example: 300
        description: "The life time of an OTP session in seconds"
      emailOtpValidPeriod:
        type: integer
        example: 300
        description: "The life time of an OTP sent by email in seconds"
      mobileOtpValidPeriod:
        type: integer
        example: 300
        description: "The life time of an OTP sent by mobile in seconds"
      vehicleOtpValidPeriod:
        type: integer
        example: 300
        description: "The life time of an OTP sent to a vehicle in seconds"
      otpCodeLength:
        type: integer
        example: 6
        description: "The length of an OTP code"

  appcodeConfig:
    type: object
    properties:
      length:
        type: integer
        example: 4
        description: "The length of App code"

  EncryptionKey:
    type: object
    description: Public password encryption key
    required:
      - versionPrefix
      - publicKey
      - keyType
      - encryptionAlgorithm
    properties:
      versionPrefix:
        type: string
        example: "p-0-"
      publicKey:
        type: string
      keyType:
        type: string
        example: "RSA"
      encryptionAlgorithm:
        type: string
        example: "RSA/ECB/PKCS1Padding"

  ErrorResponse:
    type: object
    properties:
      code:
        $ref: "#/definitions/ErrorCode"
      localizedMessage:
        type: string
        description: A localized message that can be displayed in UI
      reason:
        type: string
        description: text explains the reason of the failure


  ErrorResponseInvalidInput:
    type: object
    properties:
      status:
        type: string
        description: message sent to client
        enum:
          - INVALID_INPUT
      reason:
        type: string
        description: Message sent to client
        enum:
          - Invalid input parameter
      localizedMessage:
        type: string
        description: A localized message that can be displayed in UI
        enum:
          - Invalid input parameter

  ErrorResponseInternalServerError:
    type: object
    properties:
      status:
        type: string
        description: message sent to client
        enum:
          - INTERNAL_SERVER_ERROR
      reason:
        type: string
        description: Message sent to client
        enum:
          - Internal server error
      localizedMessage:
        type: string
        description: A localized message that can be displayed in UI
        enum:
          - Internal server error

  ErrorResponseDeviceNotFound:
    type: object
    properties:
      status:
        type: string
        description: message sent to client
        enum:
          - DEVICE_NOT_FOUND
      message:
        type: string
        description: Message sent to client
        enum:
          - Device not found
      localizedMessage:
        type: string
        description: A localized message that can be displayed in UI
        enum:
          - Device not found

  OtpMechanism:
    type: string
    description: One-time Password scheme or device type
    enum:
      - TEXT
      - APP
      - EMAIL
      - PHONE
      - SECURID

  ErrorCode:
    type: string
    description: Error code
    enum:
      - NOT_FOUND
      - INVALID_INPUT
      - DATABASE_ERROR
      - ERROR

  UserStatus:
    type: string
    description: "User account status"
    enum:
      - ACTIVE
      - SUSPENDED
      - DELETED

  VerificationStatus:
    type: string
    description: OTP or Email verification status
    enum:
      - OK
      - INVALID
      - DUPLICATE
      - EXPIRED

  Message:
    type: object
    properties:
      messageId:
        type: string
        description: "Invitation message Id"

  IotMessage:
    type: object
    required:
      - messageId
      - messageType
      - createdTs
      - updateTs
      - expiredTs
      - isExpired
      - iotId
      - iotType
      - purpose
      - codeExpiredTs
      - status
    properties:
      messageId:
        type: string
        description: "Message Id"
      messageType:
        type: string
        description: "Message type, e.g send(message is sent out by user), receive(message is sent to user) or self(message is sent to user by him/herself)\n
            1)Fields only includes for 'send': receiverId, receiverType\n
            2)Fields only includes for 'receive': senderFirstName, senderLastName, senderEmail, senderMobile"
      content:
        $ref: '#/definitions/IotMessageContent'
      createdTs:
        type: string
        description: "Message created time"
      updateTs:
        type: string
        description: "Message update time"
      expiredTs:
        type: string
        description: "Message expired time"
      isExpired:
        type: boolean
        description: "Whether the message is expired or not"
      iotId:
        type: string
        description: "IoT Id, e.g. VIN number or Internal Vin"
      iotType:
        type: string
        description: "Type of IoT, e.g \"vehicle\""
      purpose:
        type: string
        description: "Purpose of message, e.g. INVITATION\n
            1)Fields only includes for 'INVITATION': code, codeExpiredTs, expiredTs, isExpired"
      code:
        type: string
        description: "Invitation code"
      codeExpiredTs:
        type: string
        description: "Expired date for the code"
      receiverId:
        type: string
        description: "The recipient to whom the message is sent out"
      receiverType:
        type: string
        description: "Type of recipient, e.g email or mobile"

      senderFirstName:
        type: string
        description: "First name of the sender"
      senderLastName:
        type: string
        description: "Last name of the sender"
      senderEmail:
        type: string
        description: "Email address of the sender"
      senderMobile:
        type: string
        description: "Mobile number of the sender"

  IotMessageContent:
    description: JSON object with customized field, the following are several examples.
    properties:
      receiverFirstName:
        type: string
        example: Alan
        description: First name of the invitation's receiver
      receiverLastName:
        type: string
        example: Smith
        description: Last name of the invitation's receiver
      vehicleName:
        type: string
        example: My Red Mazda3
        description: The name of the car in the invitation
      vin:
        type: string
        example: JM1NB3538Y0153757
        description: The VIN number of the car.
      availableService:
        type: string
        example: eyJpc0RyaXZlciI6dHJ1ZSwiaXNBZG1pbiI6ZmFsc2V9
        description: Base64 encode string needed from Kintaro API, just pass through from APP side

securityDefinitions:
  ServiceAuth:
    type: apiKey
    in: header
    name: Authorization
    description: Bearer serviceToken
  JWTAuth:
    type: apiKey
    in: header
    name: Authorization
    description: Bearer jwtToken
  WebAuth:
    type: apiKey
    in: header
    name: Authorization
    description: Cookie? (TO BE DETERMINED)